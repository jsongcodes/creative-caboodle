import * as React from 'react';
import PropTypes from 'prop-types';
import { TouchRippleActions, TouchRippleProps } from './TouchRipple.types';
export declare const DELAY_RIPPLE = 80;
export declare const TouchRippleRoot: import("@emotion/styled").StyledComponent<import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme>, Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, keyof React.ClassAttributes<HTMLSpanElement> | keyof React.HTMLAttributes<HTMLSpanElement>>, {}>;
export declare const TouchRippleRipple: import("@emotion/styled").StyledComponent<Pick<Pick<import("./Ripple").RippleProps, keyof import("./Ripple").RippleProps> & Pick<PropTypes.InferProps<{
    classes: PropTypes.Validator<object>;
    className: PropTypes.Requireable<string>;
    in: PropTypes.Requireable<boolean>;
    onExited: PropTypes.Requireable<(...args: any[]) => any>;
    rippleSize: PropTypes.Requireable<number>;
    rippleX: PropTypes.Requireable<number>;
    rippleY: PropTypes.Requireable<number>;
    timeout: PropTypes.Validator<number>;
}>, never> & Pick<import("./Ripple").RippleProps, never>, keyof import("./Ripple").RippleProps> & import("@mui/system").MUIStyledCommonProps<import("@mui/material").Theme>, {}, {}>;
/**
 * @ignore - internal component.
 */
declare const TouchRipple: React.ForwardRefExoticComponent<Pick<TouchRippleProps, "center" | keyof React.HTMLAttributes<HTMLElement> | "classes"> & React.RefAttributes<TouchRippleActions>>;
export default TouchRipple;
